buildscript {
    repositories {
        mavenCentral()
        jcenter()
        files 'build/classes/main'
    }
    dependencies {
        classpath("mysql:mysql-connector-java:$mySQLDriverVersion")
        classpath files('build/classes/main/')
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
    }
}

plugins {
    id 'java'
    id 'org.liquibase.gradle' version '1.1.1'
}

apply plugin: 'spring-boot'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile("org.springframework:spring-core:$springVersion")
    compile("org.springframework:spring-web:$springVersion")
    compile("org.springframework:spring-webmvc:$springVersion")
    compile("org.springframework:spring-orm:$springVersion")
    compile("org.springframework:spring-jdbc:$springVersion")

    compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")

    compile("org.apache.tomcat.embed:tomcat-embed-jasper:$tomcatVersion")

    compile("org.hibernate:hibernate-core:$hibernateVersion")

    compile("mysql:mysql-connector-java:$mySQLDriverVersion")

}

def loadProperties(String sourceFileName) {
    def config = new Properties()
    def propFile = new File(sourceFileName)
    if (propFile.canRead()) {
        config.load(new FileInputStream(propFile))
        for (Map.Entry property in config) {
            ext[property.key] = property.value;
        }
    }
}

loadProperties 'src/main/resources/jdbc.properties'

liquibase {
    activities {
        main {
            changeLogFile liquibaseChangeLogFile
            url jdbcDatabaseUrl
            username jdbcUsername
            password jdbcPassword
        }
    }
    runList = 'main'
}

task updateChangeLog(type: Exec) {
    commandLine 'gradle', 'update'
}
updateChangeLog.dependsOn compileJava